<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE struts PUBLIC
        "-//Apache Software Foundation//DTD Struts Configuration 2.5//EN"
        "http://struts.apache.org/dtds/struts-2.5.dtd">

<struts>
    <!--
    后缀名可以是：wt，wang，tt，也可以没有后缀名
    -->
    <constant name="struts.action.extension"              value="wt,,wang"/>
    <!--
    开发者模式：可以使得程序员不会因为更改struts.xml而频繁启动服务器
    -->
    <constant name="struts.devMode"  value="true"/>
    <constant name="struts.i18n.encoding"     value="UTF-8"/>

    <!--
    java类与类之间，通过包来区分
    这里，action与action之间，通过package标签区分

    name:包的名字
    extend：这个包继承哪个包
    我们自定义的可以使用的package
    一定会直接或间接的继承struts-default

    -->

    <package name="Day39"
             namespace="/first"
             extends="struts-default">
        <!--
        路径名hello表示地址 栏上 的路径名
        class表示要访问的类

        method表示要访问的方法，没有写则调用execute()方法（默认的方法）,
        调用super.execute()时 默认会返回"success"
        -->
        <!--指定默认的类-->
        <default-class-ref class="DefaultAction"/>
        <action name="hello"
                class="HelloAction"
                method="hello">
            <result name="success">Hello.jsp</result>

        </action>
        <action name="default" >
            <result name="success">Hello.jsp</result>
        </action>

        <!--
        normal_Hello
        使用通配符作为action的路径
        可以扩展方法的结果视图
        也就是第一个*与第二个*所代表 的结果视图

        各种拼凑

        在name中定义的*
        在后续使用中，使用方式为{n}
        n就表示name中的第几个
        -->
        <action name="*_*" class="NormalAction" method="{1}">
            <result name="success">{2}.jsp</result>
            <allowed-methods>normal</allowed-methods>
        </action>
        <action name="api" class="servletapi.ApiAction" method="api">
            <result name="success">success.jsp</result>
        </action>

    </package>

    <!--将user.xml文件导入进来-->
    <include file="user.xml"/>


</struts>
