1，int和integer有什么区别？二者如何转换？基本数据类型有哪些？String是属于什么数据类型？
int是基本数据类型，interger是基本数据类型的包装类。二者的转换通过自动装箱和自动拆箱完成，如int a=interger（1）；自动拆箱过程，integer a=1；自动装箱过程。
基本数据类型有：int； long；double；byte；short；float；char；boolean；
String是引用数据类型；
2，final修饰符都可以修饰什么，有什么用？
final用来修饰方法，属性，类；
final修饰的方法不可重写，修饰的属性不可改变，修饰的类不可继承。

3. 接口是否可继承（extends）接口？抽象类是否可实现（implements）接口？抽象类是否可继承具体类（concrete class）？
接口可以继承接口，多重继承。
抽象类可以实现接口，抽象类实现接口，可以不重写抽象类中的抽象方法。
抽象类可以继承具体类


4，方法的重载是如何定义的？为什么不能根据返回值类型来区分方法的重载？
方法的重载就是：在同一个类中，有两个方法，方法名相同，参数列表（参数的类型，个数，和顺序）不同时，方法体的内容不同时，发生了重载；
不能根据返回值类型来区分方法的重载，因为当两个方法的返回值类型不同时，参数列表中的参数可能相同，方法体的内容也可能相同，这就与重载的定义矛盾了。

5，启动一个线程是调用run()还是start()方法？有什么区别？
启动一个线程是调用start（）方法，run（）方法是运行这个线程，并不会去强占CPU的执行权，是按顺序运行。二调用start（）方法是启动一个线程，这样这个线程就会强占CPU的执行权。




  6，关于以下程序代码的说明正确的是?
public class Test {
	private static int t = 100;	
	public static void main(String args[]) {
		Test t1 = new Test();
		t1.t++;
		Test t2 = new Test();
		t2.t++;
		t1 = new Test();
		t1.t++;
		Test.t--;
		System.out.println("t=" + t);
	}
}
	A,程序通过编译，输出结果为：t=103
	B,10行不能通过编译，因为x是私有静态变量
	C,5行不能通过编译，因为引用了私有静态变量
	D,程序通过编译，输出结果为：t=102
B7，给定以下JAVA代码，这段代码运行后输出的结果是?B
public class Test {
	public static int aMethod(int i) throws Exception {
		try {
			return i / 10;
		} catch (Exception ex) {
			throw new Exception("exception in a Method");
		} finally {
			System.out.printf("finally");
		}
	}
	public static void main(String[] args) {
		try {
			aMethod(0);
		} catch (Exception ex) {
			System.out.printf("exception in main");
		}
		System.out.printf("finished");
	}
}
	A,exception in main finished
	B,finally finished
	C,exception in main finally
	D,finally exception in main finished
C  8，根据下面的程序代码，哪个选项的值返回true？C
public class Test {
	int number;
	public Test(int number) {
		this.number = number;
	}
	public static void main(String[] args) {
		Test a,b,c;
		a = new Test(42);
		b = new Test(42);
		c = b;
		int s = 42;
	}
}
	A,	a==b
	B,	s==a
	C,	b==c
	D,	a.equals(s)

A9，下列程序的执行结果:A
	class A {
    		public int func1(int a, int b) {
        			return a - b;
    		}
	}
	class B extends A {
   		public int func1(int a, int b) {
        			return a + b;
		}
    	}
	public class ChildClass {
    		public static void main(String[] args) {
    			A a = new B();//a只能使用B继承自A的方法
    			B b = new B();//b可以使用B的所有方法
    			System.out.print("Result=" + a.func1(100, 50));
    			System.out.print(“  Result=" + b.func1(100, 50));
    		}
	}
	A,Result=50  Result=150
	B,Result=150  Result=50
	C,Result=50  Result=50
	D,Result=150  Result=150

C  10，下列程序的输出结果为 C
public class Test{
    public static void main(String[] args){
        int x = 0;
        int y = 0;
        int k = 0;
        for (int z = 0; z < 5; z++) {
            if ((++x > 2) && (++y > 2) && (k++ > 2)){
                x++;
                ++y;
                k++;
            }
        }
        System.out.println(x + ”” +y + ”” +k);
    }
}
	A,432
	B,531
	C,101010
	D,421

D 11，A 是抽象父类或接口， B ， C 派生自 A ，或实现 A ，现在 Java 源代码中有如下声明： D
	1. 	A  a0=new  A();
	2. 	A  a1 =new  B();
	3. 	A  a2=new  C();
	4.	B b = new C();
问以下哪个说法是正确的？（ ）
	A,只有第1行不能通过编译
	B,第1、2行能通过编译，但第3,4行编译出错
	C,第2行、第3行可以运行
	D,第1行、第2行和第3行的声明都是正确的

12，写出遍历Map的三种方式。
Map map -= new Map；
map.put("age","1");
for(objiect o:map.entrySet()){
  Map.Entry entry =(Map.Entry)o;
  system.put.println("key:"entry.getKey()+"vaule："+entry.getVaule());}
for(String ket:map.getKey()){
system.put.println("key:"+key)+"vaule:"+map.getVaule(ket)}
for(String vaule:map.getVaule()){
system.put.println("vaule:"+vaule);}
Interator interator =Map.Entry.interator();
while(iterator.hasNext()){
　　　　Map.Entry entry=iterator.next();
　　system.put.println("key:"+entry.getKey()+"vaule:"+entry.getVaule());}
　　}


13，命名规范，while与do-while的区别，&与&&的区别，a++和++a的区别
while 和do—while的区别是：两者都是循环控制，但是do—while中的do后面的循环只执行一次，然后在判断while后的条件；&与&&的区别是&表示与运算，两者都为真表达式才为真，&两边的表达式都执行。而&&表示逻辑与，当前面的条件不满足是后面的表达式就不会执行。
a++与++a都是自加运算；a++先使用了a后自加1，++a先a加1后再使用a。
14，写出冒泡排序

int[] arry =new int[]{2,3,5,6,8,1,0};
for(int i=0,i<arry.length,i++){
 for(int j=0,j<arry.length-1,j++){
    if(arry[j]>arry[j+1]){
       int temp =arry[j];
 		arry[j]=arry[j+1]
           arry[]=

15，复写，重写，重载都是什么？什么是构造方法？构造方法重载存在的意义是什么？
重写就是复写，都发生在父类的子类中，子类继承了父类的方法，但是改写了方法中的内容，就是重写或复写。
重载是在在同一个类中，有两个方法，方法名相同，参数列表（参数的类型，个数，和顺序）不同时，方法体的内容不同时，发生了重载；构造方法就是当新建一个对象时就会调用构造方法，
构造方法的重载的意义是可以让我们把不同参数传进这个类里，根据不同的参数可以调用调用不同的方法，还可以在新建对象时调用不同的方法。




16，说出运行下列代码产生的结果，及产生该结果的原因（越详细越好）
public class T {
	private int a = 10;
	public static void main(String[] args) {
		System.out.println(a++);
	}
}
10





17，写出权限修饰符及其所代表的含义。
public 公有的，所以的类，包，方法都可以使用 
protect  受到保护的，只有本包，本类和子类可以调用
private 私有的，只有本类可调用。
 默认的    只有本包 和本类可调用


18，子类如何调用父类的方法？在调用父类的构造方法时需要注意什么？this关键字是什么含义？
子类调用父类的方法需要在实例化对象时，用父类的引用指向子类的对象，这个对象就可以调用父类 的方法了。在调用父类的构造方法时会出现需要使用super.构造方法。this关键字的含义是相当于调用自己这个类中的属性或者方法。this.==本方法名.。

19，I/O流的两种分类方式？写出使用缓冲流读取文本文件的代码。
I/O流分为字节流和字符流
SAXRead saxread= new SAXRead;









20，创建线程的四种方式（代码）。
Thread thread =new Thread;
thread.(new Runaable());
public class A extend Thread; 
Thread a =new A; 
a.(new runaable());
public class B  implements Runaable;
thread.(new B);
thread.(new runaable(){class  A; public void A(); })

21，TCP/UDP的区别，套接字的英文。
TCP 面向连接是一对一的安全通行模式，它有三握手，需要先识别对方才能进行通行
UDP 是非面向连接 是多对一或多对多的，是一种发报式的连接，不许要识别对方
套接字的英文是Socket。





22，写出下列SQL语句。
	创建一个表，名字，性别，年龄，职业
creat table biao(name varchar(50),sex varchar(50),age int ,jobvarchar(50));


	查询姓名为三个字的，性别为男年龄大于20或性别为女年龄大于30的人。
select name=___ from biao where sex="nan"&& age>20 or sex="nv" &&
age >30 ;

	查询每个职业中男性年龄的平均值。
select name from where 


	查询姓张的女生的姓名及职业，如果没有职业则输出无业人员，按照年龄排序。
select name,job from biao where name=like("张")； 

	
23，写出拉取网络数据需要使用的类，按照使用顺序来书写。写出一个JSON对象，写出一个JSON数组。
URL url =new URL ;
URLConnection conn=rul.OpenURLConnection（）；
　　









22，英文考试环节：
	
	序列化_____？___ 同步___commit_____ 正则regure______ 表达式___expression___ 分支__branch____
	average___平均_average__ 列_column_____ 数据库database______ 合并  merge______ 提交____input____
	viriable___？____ element  属性__________ status  开始________ 影响_affection_______
	询问____equiry____ 流__stream______
	
	4+4+4+4+4+0+4+4+0+0
       +0+1+3+0+2+0+4+2+0.5+2
       +3+1+0+5
