<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lanou.admin_info.dao.Admin_infoMapper" >
  <resultMap id="BaseResultMap" type="com.lanou.admin_info.domain.Admin_info" >
    <constructor >
      <idArg column="admin_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="admin_code" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="telephone" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="email" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="enrolldate" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    admin_id, admin_code, password, name, telephone, email, enrolldate
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from admin_info
    where admin_id = #{adminId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from admin_info
    where admin_id = #{adminId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteAdminRole" parameterType="int">
    DELETE FROM admin_role
    WHERE admin_id=#{arg0}
  </delete>
  <insert id="insert" parameterType="com.lanou.admin_info.domain.Admin_info" >
    insert into admin_info (admin_id, admin_code, password, 
      name, telephone, email, 
      enrolldate)
    values (#{adminId,jdbcType=INTEGER}, #{adminCode,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{enrolldate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.lanou.admin_info.domain.Admin_info" useGeneratedKeys="true" keyProperty="adminId" keyColumn="admin_id" >
    insert into admin_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="adminId != null" >
        admin_id,
      </if>
      <if test="adminCode != null" >
        admin_code,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="telephone != null" >
        telephone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="enrolldate != null" >
        enrolldate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="adminId != null" >
        #{adminId,jdbcType=INTEGER},
      </if>
      <if test="adminCode != null" >
        #{adminCode,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="enrolldate != null" >
        #{enrolldate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <insert id="insertAdminRole" parameterType="extendAdmin_info">
    INSERT INTO admin_role VALUES
    <foreach collection="roleIds" item="item" separator=",">
      ( #{adminId},#{item} )
    </foreach>
  </insert>
  <!--<insert id="insertAdminInfo" parameterType="extendAdmin_info">-->
      <!--INSERT INTO admin_info()-->
    <!--</insert>-->
    <update id="updateByPrimaryKeySelective" parameterType="com.lanou.admin_info.domain.Admin_info" >
    update admin_info
    <set >
      <if test="adminCode != null" >
        admin_code = #{adminCode,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="enrolldate != null" >
        enrolldate = #{enrolldate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where admin_id = #{adminId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lanou.admin_info.domain.Admin_info" >
    update admin_info
    set admin_code = #{adminCode,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      enrolldate = #{enrolldate,jdbcType=TIMESTAMP}
    where admin_id = #{adminId,jdbcType=INTEGER}
  </update>

  <select id="findTotalData" resultType="int" >
    select count(*) from admin_info
  </select>

  <select id="findAllByPage" parameterType="admin_infoPageBean" resultMap="ResultMap">
    SELECT
    *
    FROM admin_info
    limit #{pageData},#{pageSize}
  </select>

  <select id="findAll" parameterType="admin_infoPageBean" resultMap="ResultMap">
    SELECT
    *
    FROM admin_info
    limit #{pageData},#{pageSize}
  </select>

  <resultMap id="ResultMap" type="extendAdmin_info" >
    <id property="adminId" column="admin_id"/>
    <result property="adminCode"  column="admin_code"/>
    <result property="password" column="password"/>
    <result property="name" column="name"/>
    <result property="telephone" column="telephone"/>
    <result property="email" column="email"/>
    <result property="enrolldate" column="enrolldate"/>
    <collection ofType="com.lanou.admin_info.domain.ExtendAdmin_info"
                property="roleIds" javaType="java.util.ArrayList"
                column="admin_id" select="selectModules">
    </collection>
  </resultMap>

  <select id="selectModules"
          parameterType="int"
          resultType="string">
    select role_info.name from role_info  where role_id in (
    select admin_role.role_id from admin_role
    where admin_id=#{adminId}
    )
  </select>
    <select id="findByCode" parameterType="string" resultType="com.lanou.admin_info.domain.Admin_info">
      SELECT * FROM admin_info WHERE admin_code=#{adminCode}
    </select>
  <select parameterType="int" id="findModulesByAdmin" resultType="com.lanou.module_info.domain.Module_info">
    SELECT * FROM module_info where module_id in_(
SELECT role_module module_id
FROM admin_role ar
INNER JOIN role_info ri on ri.role_id=ar.role_id
INNER join role_module rm on rm.role_id=ri.role_id
WHERE ar.admin_id=#{adminId}
)order by module_id
</select>

  <update id="updatePassword" parameterType="hashmap">
    UPDATE  admin_info set password=#{password}
    where admin_id in
    <foreach collection="ids" open="(" close=")" separator="," item="id">
      #{id}
    </foreach>
  </update>
</mapper>